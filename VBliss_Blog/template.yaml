AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  VBliss-Blog

  VBliss-Blog automation system.
  It creates a Step Functions state machine that orchestrates a series of Lambda functions
  to generate and publish blog posts automatically. The system performs the following tasks:
  1. Reads data from Google Sheets
  2. Generates a table of contents
  3. Processes individual sections of the blog post
  4. Concatenates the results
  5. Generates a summary
  6. Creates an image prompt and generates an image using AI
  7. Posts the image and content to WordPress
  8. Updates Google Sheets with the results
  9. Cleans up temporary storage

# The template also sets up necessary IAM roles, S3 bucket for temporary storage,
# and schedules the state machine to run periodically.

Resources:
  # State Machine Definition
  VBlissBlogStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      DefinitionUri: statemachine/VBlissBlog.asl.json
      DefinitionSubstitutions:
        # Lambda function ARNs are referenced here for use in the state machine
        ReadGoogleSheetsCellArn: !GetAtt ReadGoogleSheetsCell.Arn
        GenerateTableOfContentsArn: !GetAtt GenerateTableOfContents.Arn
        ProcessSectionLambdaArn: !GetAtt ProcessSectionLambda.Arn
        ConcatenateResultsLambdaArn: !GetAtt ConcatenateResultsLambda.Arn
        GenerateSummaryArn: !GetAtt GenerateSummary.Arn
        GenerateFluxPromptArn: !GetAtt GenerateFluxPrompt.Arn
        GenerateFluxImageArn: !GetAtt GenerateFluxImage.Arn
        PostImageWordpressArn: !GetAtt PostImageWordpress.Arn
        PostWordpressArn: !GetAtt PostWordpress.Arn
        WriteBackGoogleSheetsArn: !GetAtt WriteBackGoogleSheets.Arn
        EmptyBucketArn: !GetAtt EmptyBucket.Arn
      Events:
        BlogPostingSchedule:
          Type: Schedule
          Properties:
            Description: Schedule to write the blog post every 15 minutes
            Enabled: True # Set to False for debugging to avoid unnecessary charges
            Schedule: "rate(15 minutes)"
      Policies:
        # Policies to allow the state machine to invoke Lambda functions
        - LambdaInvokePolicy:
            FunctionName: !Ref ReadGoogleSheetsCell
        - LambdaInvokePolicy:
            FunctionName: !Ref GenerateTableOfContents
        - LambdaInvokePolicy:
            FunctionName: !Ref ProcessSectionLambda
        - LambdaInvokePolicy:
            FunctionName: !Ref ConcatenateResultsLambda
        - LambdaInvokePolicy:
            FunctionName: !Ref GenerateSummary
        - LambdaInvokePolicy:
            FunctionName: !Ref GenerateFluxPrompt
        - LambdaInvokePolicy:
            FunctionName: !Ref GenerateFluxImage
        - LambdaInvokePolicy:
            FunctionName: !Ref PostImageWordpress
        - LambdaInvokePolicy:
            FunctionName: !Ref PostWordpress
        - LambdaInvokePolicy:
            FunctionName: !Ref WriteBackGoogleSheets
        - LambdaInvokePolicy:
            FunctionName: !Ref EmptyBucket

  # S3 Bucket for temporary storage of generated images
  TempS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: vbliss-blog-temp

  # Lambda function definitions
  # Each function is defined with its code location, runtime, timeout, memory size,
  # environment variables, and necessary IAM policies

  # Function to read data from Google Sheets
  ReadGoogleSheetsCell:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./functions/01_ReadGoogleSheets
      Handler: read_google_sheets_cell.lambda_handler
      Runtime: python3.12
      Timeout: 900
      MemorySize: 1024
      Environment:
        Variables:
          SPREADSHEET_ID: '145Nn-ws9-tpSU3564oAcVbD6pNiZBDtVgENLJNaem7M' # Put your Google Sheets ID here
          RANGE_NAME: 'WebFlow!A1:M9999' # put the range you wish to use from Google Sheets here
          SECRET_NAME: 'GoogleJSONCredentials' # Modify with the name of the AWS Secret you used to store your Google Credentials
          REGION_NAME: 'us-west-2' # this is the region you have your secret stored at for the google credentials
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: '2012-10-17' 
          Statement:
            - Effect: Allow
              Action:
                - 'secretsmanager:GetSecretValue'
              Resource: '*'
            - Effect: Allow
              Action:
                - 'kms:Decrypt'
                - 'kms:DescribeKey'
              Resource: '*'

  # Function to generate table of contents
  GenerateTableOfContents:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./functions/02_CreateTOC
      Handler: generate_table_of_contents.lambda_handler
      Runtime: python3.12
      Timeout: 900
      MemorySize: 1024
      Environment:
        Variables:
          # Multiple model IDs are provided to handle potential throttling issues
          BEDROCK_MODEL_ID_1: 'anthropic.claude-3-opus-20240229-v1:0'
          BEDROCK_MODEL_ID_2: 'anthropic.claude-3-5-sonnet-20240620-v1:0'
          BEDROCK_MODEL_ID_3: 'anthropic.claude-3-sonnet-20240229-v1:0'
          BEDROCK_MODEL_ID_4: 'anthropic.claude-3-haiku-20240307-v1:0'
          SYSTEM_PROMPT: 'Eres un generador de tablas de contenido de posts para un blog de bienestar sexual, tu tarea es ayudar a crear un blog educativo sobre sexualidad y relaciones mediante una tabla de contenido que abarque todo el tema. Aborda los temas con franqueza pero evitando lenguaje crudo o descripciones gráficas. Enfócate en promover el consentimiento, el respeto, la salud y la seguridad. Adapta el tono y contenido para una audiencia general. Cita fuentes confiables cuando sea relevante. Utilizarás la plantilla que el usuario te proveerá de manera estricta.'
          USER_PROMPT: 'Tu tarea es actuar como un experto en salud sexual y determinar los temas a tocar en una tabla de contenido para un blog informativo sobre el siguiente tema: #####. Genera la tabla de contenido en el siguiente formato JSON:  \n{\n  \"titulo\": \"Titulo del Post de Blog\",\n  \"tdc\": [\n    {\n      \"titulo\": \"Tema 1\",\n      \"sub-temas\": [\n        {\n          \"titulo\": \"sub-tema 1.1\",\n          \"sub-temas\": [\n            {\n              \"titulo\": \"sub-tema 1.1.1\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"titulo\": \"Tema 2\",\n      \"sub-temas\": []\n    }\n  ]\n}'
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: '2012-10-17' 
          Statement:
            - Effect: Allow
              Action:
                - 'bedrock:InvokeModel'
              Resource: '*'

  ProcessSectionLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./functions/03_ProcessSections
      Handler: Process_Section_Lambda.lambda_handler
      Runtime: python3.12
      Timeout: 900
      MemorySize: 1024
      Environment:
        Variables:
          BEDROCK_MODEL_ID_1: 'anthropic.claude-3-opus-20240229-v1:0'
          BEDROCK_MODEL_ID_2: 'anthropic.claude-3-5-sonnet-20240620-v1:0'
          BEDROCK_MODEL_ID_3: 'anthropic.claude-3-sonnet-20240229-v1:0'
          BEDROCK_MODEL_ID_4: 'anthropic.claude-3-haiku-20240307-v1:0'
          SYSTEM_PROMPT: 'Eres un generador de posts para un blog de bienestar sexual, tu tarea es ayudar a crear un blog educativo sobre sexualidad y relaciones con el siguiente título: "#####". Aborda los temas con franqueza pero evitando lenguaje crudo o descripciones gráficas. Enfócate en promover el consentimiento, el respeto, la salud y la seguridad. Adapta el tono y contenido para una audiencia general. Cita fuentes confiables cuando sea relevante. Lo vas a hacer sin utilizar ningún caracter especial. Deberás utilizar etiquetas HTML para dar formato, pero sin incluir las etiquetas <html>, <head> o <body>. Usa etiquetas como <h1>, <h2>, <p>, <strong>, <em>, <ul>, <li>, etc. para estructurar y formatear el contenido. El resultado debe ser solo el contenido formateado, listo para insertarse dentro del cuerpo de un documento HTML existente.'
          USER_PROMPT: 'Crea una sección de un post de blog basado en la siguiente tabla de contenido: "#####" . Asegurate de usar la siguiente frase clave: "$$$$$"; en el primer párrafo y además usarla al menos 5 veces en el texto. Al crear el contenido, sigue estas pautas: Aborda el tema con franqueza pero usando un lenguaje apropiado para todo público. Evita terminología cruda, vulgar o explícitamente sexual. Enfócate en proveer información basada en hechos de fuentes confiables. Cita estudios o estadísticas relevantes cuando sea posible. Promueve mensajes positivos de consentimiento, comunicación, seguridad y respeto en las relaciones sexuales. Incluye recursos o información de contacto de organizaciones de salud sexual si es relevante. Usa un tono cálido, empático y libre de prejuicios. Organiza la sección del artículo en secciones con subtítulos para una fácil lectura. Recuerda, el objetivo es educar y empoderar a los lectores con información precisa sobre salud sexual, no crear contenido erótico o pornográfico. Aborda el tema con sensibilidad y buen gusto.'
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: '2012-10-17' 
          Statement:
            - Effect: Allow
              Action:
                - 'bedrock:InvokeModel'
              Resource: '*'

  ConcatenateResultsLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./functions/04_ConcatenateResults
      Handler: Concatenate_Results.lambda_handler
      Runtime: python3.12
      Timeout: 900
      MemorySize: 1024
      Policies:
        - AWSLambdaBasicExecutionRole

  GenerateSummary:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./functions/05_GenerateSummary
      Handler: Generate_Summary.lambda_handler
      Runtime: python3.12
      Timeout: 900
      MemorySize: 1024
      Environment:
        Variables:
          BEDROCK_MODEL_ID_1: 'anthropic.claude-3-opus-20240229-v1:0'
          BEDROCK_MODEL_ID_2: 'anthropic.claude-3-5-sonnet-20240620-v1:0'
          BEDROCK_MODEL_ID_3: 'anthropic.claude-3-sonnet-20240229-v1:0'
          BEDROCK_MODEL_ID_4: 'anthropic.claude-3-haiku-20240307-v1:0'
          SYSTEM_PROMPT: 'Eres un generador de extractos, únicamente generas el extracto que el usuario te pide sin contexto ni explicaciones adicionales. Nunca agregas texto enunciando lo que vas a responder.'
          USER_PROMPT: 'Genera un extracto corto del siguiente post de blog #####: $$$$$. Asegúrate de usar la siguiente frase clave en el texto: !!!!!'
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: '2012-10-17' 
          Statement:
            - Effect: Allow
              Action:
                - 'bedrock:InvokeModel'
              Resource: '*'

  GenerateFluxPrompt:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./functions/06_GenerateFluxPrompt
      Handler: Generate_Flux_Prompt.lambda_handler
      Runtime: python3.12
      Timeout: 900
      MemorySize: 1024
      Environment:
        Variables:
          BEDROCK_MODEL_ID_1: 'anthropic.claude-3-opus-20240229-v1:0'
          BEDROCK_MODEL_ID_2: 'anthropic.claude-3-5-sonnet-20240620-v1:0'
          BEDROCK_MODEL_ID_3: 'anthropic.claude-3-sonnet-20240229-v1:0'
          BEDROCK_MODEL_ID_4: 'anthropic.claude-3-haiku-20240307-v1:0'
          SYSTEM_PROMPT: 'You are an expert prompt engineer specialized in prompts for image generation using Black Forest Flux difussion models. You will generate the text of the prompt requested by user and never give any context or additional explanations. You never add text announcing what you will respond nor generate any summary of what you did.'
          USER_PROMPT: 'Generate a prompt in english for stable diffussion models based on: #####; $$$$$'
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: '2012-10-17' 
          Statement:
            - Effect: Allow
              Action:
                - 'bedrock:InvokeModel'
              Resource: '*'

  GenerateFluxImage:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./functions/07_GenerateFluxImage
      Handler: Generate_Flux_Image.lambda_handler
      Runtime: python3.12
      Timeout: 900
      MemorySize: 1024
      Environment:
        Variables:
          S3_BUCKET_NAME: !Ref TempS3Bucket
          ENDPOINT_NAME: 'XXXXX'
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: '2012-10-17' 
          Statement:
            - Effect: Allow
              Action:
                - 'secretsmanager:GetSecretValue'
              Resource: '*'
            - Effect: Allow
              Action:
                - 'kms:Decrypt'
                - 'kms:DescribeKey'
              Resource: '*'
            - Effect: Allow
              Action:
                - 's3:PutObject'
              Resource: !Sub '${TempS3Bucket.Arn}/*'

  PostImageWordpress:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./functions/08_PostImageWordpress
      Handler: Post_Image_Wordpress.lambda_handler
      Runtime: python3.12
      Timeout: 900
      MemorySize: 1024
      Environment:
        Variables:
          API_URL: 'https://public-api.wordpress.com/rest/v1.1/sites/$site/media/new'
          SECRET: 'WordpressCredentials'
          REGION: 'us-west-2'
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: '2012-10-17' 
          Statement:
            - Effect: Allow
              Action:
                - 'secretsmanager:GetSecretValue'
              Resource: '*'
            - Effect: Allow
              Action:
                - 'kms:Decrypt'
                - 'kms:DescribeKey'
              Resource: '*'
            - Effect: Allow
              Action:
                - 's3:GetObject'
              Resource: !Sub '${TempS3Bucket.Arn}/*'

  PostWordpress:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./functions/09_PostWordpress
      Handler: Post_Wordpress.lambda_handler
      Runtime: python3.12
      Timeout: 900
      MemorySize: 1024
      Environment:
        Variables:
          API_URL: 'https://public-api.wordpress.com/rest/v1.1/sites/$site/posts/new'
          SECRET: 'WordpressCredentials'
          REGION: 'us-west-2'
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: '2012-10-17' 
          Statement:
            - Effect: Allow
              Action:
                - 'secretsmanager:GetSecretValue'
              Resource: '*'
            - Effect: Allow
              Action:
                - 'kms:Decrypt'
                - 'kms:DescribeKey'
              Resource: '*'

  WriteBackGoogleSheets:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./functions/10_WriteBackGoogleSheets
      Handler: Write_Back_Google_Sheets.lambda_handler
      Runtime: python3.12
      Timeout: 900
      MemorySize: 1024
      Environment:
        Variables:
          SPREADSHEET_ID: '145Nn-ws9-tpSU3564oAcVbD6pNiZBDtVgENLJNaem7M' # Put your Google Sheets ID here
          SECRET: 'GoogleJSONCredentials' # Modify with the name of the AWS Secret you used to store your Google Credentials
          REGION: 'us-west-2' # this is the region you have your secret stored at for the google credentials
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: '2012-10-17' 
          Statement:
            - Effect: Allow
              Action:
                - 'secretsmanager:GetSecretValue'
              Resource: '*'
            - Effect: Allow
              Action:
                - 'kms:Decrypt'
                - 'kms:DescribeKey'
              Resource: '*'

  EmptyBucket:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./functions/11_EmptyBucket
      Handler: Empty_Bucket.lambda_handler
      Runtime: python3.12
      Timeout: 900
      MemorySize: 1024
      Environment:
        Variables:
          S3_BUCKET_NAME: !Ref TempS3Bucket
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: '2012-10-17' 
          Statement:
            - Effect: Allow
              Action:
                - 's3:ListBucket'
                - 's3:DeleteObject'
              Resource:
                - !Sub '${TempS3Bucket.Arn}'
                - !Sub '${TempS3Bucket.Arn}/*'

Outputs:
  # Outputs section for important resource information
  VBlissBlogStateMachineArn:
    Description: "VBliss Log State machine"
    Value: !Ref VBlissBlogStateMachine
  VBlissBlogStateMachineRoleArn:
    Description: "IAM Role created for VBliss Blog State machine based on the specified SAM Policy Templates"
    Value: !GetAtt VBlissBlogStateMachineRole.Arn
  VBlissBlogS3Bucket:
    Description: "VBliss Blog Temporary S3 bucket for Images"
    Value: !GetAtt TempS3Bucket.Arn
  VBlissBlogLambda1:
    Description: !GetAtt ReadGoogleSheetsCell.Name
    Value: !GetAtt ReadGoogleSheetsCell.Arn
  VBlissBlogLambda2:
    Description: !GetAtt GenerateTableOfContents.Name
    Value: !GetAtt GenerateTableOfContents.Arn
  VBlissBlogLambda3:
    Description: !GetAtt ProcessSectionLambda.Name
    Value: !GetAtt ProcessSectionLambda.Arn
  VBlissBlogLambda4:
    Description: !GetAtt ConcatenateResultsLambda.Name
    Value: !GetAtt ConcatenateResultsLambda.Arn
  VBlissBlogLambda5:
    Description: !GetAtt GenerateSummary.Name
    Value: !GetAtt GenerateSummary.Arn
  VBlissBlogLambda6:
    Description: !GetAtt GenerateFluxPrompt.Name
    Value: !GetAtt GenerateFluxPrompt.Arn
  VBlissBlogLambda7:
    Description: !GetAtt GenerateFluxImage.Name
    Value: !GetAtt GenerateFluxImage.Arn
  VBlissBlogLambda8:
    Description: !GetAtt PostImageWordpress.Name
    Value: !GetAtt PostImageWordpress.Arn
  VBlissBlogLambda9:
    Description: !GetAtt PostWordpress.Name
    Value: !GetAtt PostWordpress.Arn
  VBlissBlogLambda10:
    Description: !GetAtt WriteBackGoogleSheets.Name
    Value: !GetAtt WriteBackGoogleSheets.Arn
  VBlissBlogLambda11:
    Description: !GetAtt EmptyBucket.Name
    Value: !GetAtt EmptyBucket.Arn
